generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  username  String      @unique
  password  String
  bio       String?
  image     String?     @default("https://api.realworld.io/images/smiley-cyrus.jpeg")
  comments  Comment[]
  articles  Article[]
  favorites Favorites[]
  following Follows[]   @relation("Following")
  followers Follows[]   @relation("Followers")
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  articles Article[]
}

model Article {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  body        String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      Int
  comments    Comment[]
  tags        Tag[]
  author      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  favorited   Favorites[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  body      String
  articleId Int?
  userId    Int
  author    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  article   Article?  @relation(fields: [articleId], references: [id], onDelete: Cascade)
}

model Favorites {
  userId    Int
  articleId Int
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@id([userId, articleId])
}

model Follows {
  followerId Int
  authorId   Int
  follower   User @relation("Following", fields: [followerId], references: [id], onDelete: Cascade)
  author     User @relation("Followers", fields: [authorId], references: [id], onDelete: Cascade)

  @@id([authorId, followerId])
}
